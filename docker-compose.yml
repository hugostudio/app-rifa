version: "3.4"

services:
  supertokens-core:
    build: core/.
    container_name: supertokens-core
    environment:
      POSTGRESQL_USER: ${POSTGRESQL_USER}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_PORT: ${POSTGRESQL_PORT}
      POSTGRESQL_DATABASE_NAME: ${POSTGRESQL_DATABASE_NAME}
      LOG_LEVEL: DEBUG
    ports:
      - 3567:3567
    networks:
      - supertokens-network
    # depends_on:
    #   - supertokens-db 
    restart: unless-stopped
    healthcheck:
      test: >
            bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5      

  # supertokens-backend:
  #   build: backend/.
  #   # image: node:18-alpine
  #   container_name: supertokens-backend    
  #   environment:
  #     SUPERTOKENS_CONNECTION_URI: https://withered-star-3436.fly.dev
  #     SUPERTOKENS_APP_NAME: ${SUPERTOKENS_APP_NAME}
  #     SUPERTOKENS_API_DOMAIN: ${SUPERTOKENS_API_DOMAIN}
  #     SUPERTOKENS_WEBSITE_DOMAIN: ${SUPERTOKENS_WEBSITE_DOMAIN}
  #     SUPERTOKENS_APIKEY: ${SUPERTOKENS_APIKEY}
  #     EMAIL_HOST: ${EMAIL_HOST}
  #     EMAIL_USER_NAME: ${EMAIL_USER_NAME}
  #     EMAIL_PASSWORD: ${EMAIL_PASSWORD}
  #     EMAIL_SEND_PORT: ${EMAIL_SEND_PORT}
  #     EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
  #     EMAIL_FROM_EMAIL: ${EMAIL_FROM_EMAIL}
  #   ports:
  #     - 3001:3001
  #   working_dir: /app 
  #   networks:
  #     - supertokens-network
  #   # restart: unless-stopped
  #   command: sh -c "npm i && npm run start"
  #   # depends_on:
  #   #   - supertokens-core

networks:
  supertokens-network:
    driver: bridge   